{
  "hash": "1190b4ffb2ac79a771cf5a81feb3b849",
  "result": {
    "markdown": "---\ntitle: \"Part 2: Quarto Introduction\"\npagetitle: \"Part 2: Quarto Introduction\"\nsubtitle: \"OCTRI-BERD Workshop July 2025\"\nauthor: \"Jessica Minnier, Meike Niederhausen\"\ninstitute: \"OHSU-PSU School of Public Health\"\ndate: \"7/17/25\"\nformat: \n  revealjs:\n      incremental: false\n      scrollable: true\n      chalkboard: true\n      theme: [../sky_modified.scss]\n      width:  1050 #default 1050\n      height: 700 #default 700\n      slide-number: true\n      html-math-method: mathjax\n  # html:\n  #   link-external-newwindow: true\n  #   toc: true\nbibliography: ../references.bib\nexecute:\n  echo: true\n  freeze: auto  # re-render only when source changes\n# editor: visual\neditor_options: \n  chunk_output_type: console\n---\n\n\n\n\n\n# Basic Quarto example\n\n![[Artwork from \"Hello, Quarto\" keynote by Julia Lowndes and Mine Ã‡etinkaya-Rundel, presented at RStudio Conference 2022. Illustrated by Allison Horst.](https://allisonhorst.com/cetinkaya-rundel-lowndes-quarto-keynote)](../images/horst_quarto_moon_penguins.png){fig-align=\"center\"}\n\n## 1. Create a Quarto file (`.qmd`)\n\n**Two options:**\n\n1.  click on File $\\rightarrow$ New File $\\rightarrow$ Quarto Document...$\\rightarrow$ OK,\n2.  or in upper left corner of RStudio click on ![](../images/green_plus_create_file.png){width=\"70\"} $\\rightarrow$ ![](../images/select_quarto_option.png){width=\"250\"}\n\n::: columns\n::: {.column width=\"50%\"}\n**Pop-up window selections:**\n\n-   Enter a title and your name\n-   Select `HTML` output format (default)\n-   Engine: select `Knitr`\n-   Editor: Select `Use visual markdown editor`\n-   Click `Create`\n:::\n\n::: {.column width=\"50%\"}\n![](../images/01_qmd_screenshot_popup.png){width=90%}\n:::\n:::\n\n## 2. Create a Quarto file (`.qmd`)\n\n-   After clicking on `Create`, you should then see the following in your editor window:\n\n![](../images/01_qmd_screenshot.png){fig-align=\"center\"}\n\n## 3. Save the Quarto file (`.qmd`)\n\n-   **Save the file** by\n    -   selecting `File -> Save`,\n    -   or clicking on ![](../images/01_Script_Save.png){width=\"33\" height=\"24\"} (towards the left above the scripting window),\n    -   or keyboard shortcut\n        -   PC: *Ctrl + s*\n        -   Mac: *Command + s*\n-   You will need to specify\n    -   a **filename** to save the file as\n        -   ALWAYS use **.qmd** as the filename extension for Quarto files\n    -   the **folder** to save the file in\n\n## 4. Create (render) html file\n\nWe create the html file by **rendering** the .qmd file.\n\n__Two options:__\n\n::: {.columns}\n                                        \n::: {.column width=\"49%\"}\n1.  Click on the Render icon ![](../images/render_icon.png) at the top of the editor window,\n:::\n\n::: {.column width=\"2%\"}\n\n:::\n                                          \n::: {.column width=\"49%\"}\n2.  Or use keyboard shortcuts\n    -   Mac: *Command+Shift+K*\n    -   PC: *Ctrl+Shift+K*\n:::\n                                          \n:::\n\n-   A new window will open with the html output.\n-   You will now see both .qmd and .html files in the folder where you saved the .qmd file.\n\n::: callout-note\n-   The template .qmd file that RStudio creates will render to an html file by default.\n-   The output format can be changed to create a Word doc, pdf, slides, etc.\n:::\n\n## .qmd file vs. its html output\n\n::: columns\n::: {.column width=\"50%\"}\n.qmd file ![](../images/01_qmd_screenshot.png){fig-align=\"center\"}\n:::\n\n::: {.column width=\"50%\"}\nhtml output\\\n![](../images/default_quarto_html.png){fig-align=\"center\"}\n:::\n:::\n\n# 3 types of Quarto content: text\n\n1. [*Text*, lists, images, tables, links]{style=\"color:darkorange\"}\n2. Code chunks\n3. YAML metadata \n\n![[Illustration by Alison Hill and Allison Horst, for RStudio.](https://allisonhorst.com/horst-hill-collaborations)](../images/horst_hedgehog_text_code.png){fig-align=\"center\"}\n\n## Formatting text  \n\n* __bold__, _italics_, super^scripts^ & sub~scripts~, ~~strikethrough~~, `verbatim`, etc. \\\n\\\n\n\n* Text is formatted through a markup language called `Markdown` ([Wikipedia](https://en.wikipedia.org/wiki/Markdown){target=\"_blank\"})\n    * Other markup languages include html (webapges) and LaTeX (math)\n    * All text formatting is specified via *code*\n    * \"Markdown is a plain text format that is designed to be easy to write, and, even more importantly, easy to read\" [^1]\n* Newer versions of RStudio include a `Visual editor` as well that makes formatting text similar to using a word processor. \n\n\n![](../images/visual_editor_quarto.png){fig-align=\"center\"}\n\n[^1]: From Quarto's Markdown Basics webpage, https://quarto.org/docs/authoring/markdown-basics.html\n\n## Formatting text: `Visual editor`  {.smaller}\n\n* Using the `Visual editor` is similar to using a wordprocessor, such as Word\n* Keyboard shortcuts usually work as well (_shown for Mac below_)\n\n![](../images/visual_editor_options_expanded_quarto.png){fig-align=\"center\"}\n\n\n## Formatting text: `Markdown` \n\n+---------------------------------------------------+---------------------------------------------------+\n| Markdown:                                         | Output:                                           |\n+===================================================+===================================================+\n| ```                                               | *This text is in italics*, but _so is this text_. |\n| *This text is in italics*, but _so is this text_. |                                                   |\n| ```                                               |                                                   |\n+---------------------------------------------------+---------------------------------------------------+\n| ```                                               | **Bold** also has __2 options__                   |\n| **Bold** also has __2 options__                   |                                                   |\n| ```                                               |                                                   |\n+---------------------------------------------------+---------------------------------------------------+\n| ```                                               | ~~Should this be deleted?~~                       |\n| ~~Should this be deleted?~~                       |                                                   |\n| ```                                               |                                                   |\n+---------------------------------------------------+---------------------------------------------------+\n| ```                                               | Need^super^ or~sub~ scripts?                      |\n| Need^super^ or~sub~ scripts?                      |                                                   |\n| ```                                               |                                                   |\n+---------------------------------------------------+---------------------------------------------------+\n| ```                                               | `Code is often formatted as verbatim`             |\n| `Code is often formatted as verbatim`             |                                                   |\n| ```                                               |                                                   |\n+---------------------------------------------------+---------------------------------------------------+\n| ```                                               | > This is a block quote.                          |\n| >This is a block quote.                           |                                                   |\n| ```                                               |                                                   |\n+---------------------------------------------------+---------------------------------------------------+\n\n\n<!-- : {tbl-colwidths=\"\\[50,50\\]\"} -->\n\n\n## Headers\n\n::: {style=\"font-size: 85%;\"}\n* Organize your documents using headers to create sections and subsections\n* Use `#` at the beginning of the line to create headers\n:::\n\n::: columns\n::: {.column width=\"50%\"}\nText in editor:\n\n![](../images/screenshot_headers.png){fig-align=\"center\" height=\"300\"}\n\n:::\n\n::: {.column width=\"50%\"}\nOutput:\n\n![](../images/screenshot_headers_out.png){fig-align=\"center\" height=\"300\"}\n\n<!-- # Header 1 -->\n\n<!-- ## Header 2 -->\n\n<!-- ### Header 3 -->\n\n<!-- #### Header 4 -->\n\n<!-- ##### Header 5 -->\n\n<!-- ###### Header 6 -->\n\n:::\n:::\n\n\n:::{.callout-important}\nMake sure there is no space before the `#`, and there IS a space after the `#`\nin order for the header to work properly.\n:::\n\n\n\n## Outline of headers in RStudio \n\n\n* You can easily navigate through your .qmd file if you use headers to outline your text.\n* Click on the Outline button below the Run button ![](../images/01_Script_Run.png) to see the outline.\n\n![](../images/default_quarto_html_outline.png){fig-align=\"center\"}\n\n## Unnumbered lists\n\n\n::: {.columns}\n                                        \n::: {.column width=\"50%\"}\nText in editor:\n\n\n![](../images/screenshot_unnumbered_lists_code.png){fig-align=\"center\" height=\"70%\"}\n:::\n                                          \n::: {.column width=\"50%\"}\n::: {style=\"font-size: 75%;\"}\n* This is an **unnumbered list**\n  + with *sub-items*\n      - and *sub-sub-items*,\n          - or even deeper.\n* You can use characters *, +, and - to create lists.\n  * The order of the \n      * characters is not important\n          + and characters can be repeated.\n\nWhat *is* important is the *spacing*!\n\n+ indent each \n  * sub-level with a tab and make sure  \n  * there is a space between the character starting the list and the first bit of text,\n  *otherwise the text won't be a new bullet in the list\n:::\n\n:::\n:::\n\n\n## Numbered lists\n\n::: {.columns}\n::: {.column width=\"50%\"}\nText in editor:\n\n![](../images/screenshot_numbered_lists_code.png){fig-align=\"center\" height=\"60%\"}\n:::\n                                          \n::: {.column width=\"50%\"}\nOutput:\n\n![](../images/screenshot_numbered_lists_out.png){fig-align=\"center\" height=\"60%\"}\n\n<!-- 1. This is a **Numbered list** -->\n<!--   i) with *sub-items* -->\n<!--       A. and *sub-sub-items*, -->\n<!--           1. or even deeper. -->\n<!-- 2. You can also nest  -->\n<!--   * unnumbered lists  -->\n<!--       * inside numbered lists -->\n<!-- 3. Since  -->\n<!--   a. sub-items can't be lettered. -->\n\n<!-- A cool feature is that -->\n<!-- 1. you can start   -->\n<!-- 1. each numbered bullet  -->\n<!-- 1. with 1. -->\n<!-- 1.just remember to  -->\n<!-- *include the space after the period!*   -->\n:::\n\n:::\n\n\n\n\n\n## Practice \n\n::: {style=\"font-size: 85%;\"}\n\n1.  __Part 1__\n    1.  Using the visual editor, practice formatting text in your qmd file, such as making text **bold**, *italicized*, and in `code` format.\n    2.  Add 1^st^, 2^nd^, and 3^rd^ level headers\n    3.  Add a list with a\n        -   sub-list (bullet and/or numbered)\n    4.  Add a table\n    5.  Add whatever else you are interested in!\n2.  __Part 2__\n    1.  Switch back to the `Source` editor and examine the markdown code that was used for the formatting.\n\n**Questions**:  _Share in the chat:_\n\n1.  What went smoothly?\n2.  What hurdles did you encounter?\n\n:::\n\n# 3 types of Quarto content: code\n\n1. Text, lists, images, tables, links\n2. [*Code chunks*]{style=\"color:darkorange\"}\n3. YAML metadata \n\n![[Illustration by Alison Hill and Allison Horst, for RStudio.](https://allisonhorst.com/horst-hill-collaborations)](../images/horst_hedgehog_text_code.png){fig-align=\"center\"}\n\n## Code chunks\n\n::: columns\n::: {.column width=\"50%\"}\n.qmd file ![](../images/01_qmd_screenshot.png){fig-align=\"center\"}\n:::\n\n::: {.column width=\"50%\"}\nhtml output\\\n![](../images/default_quarto_html.png){fig-align=\"center\"}\n:::\n:::\n\n## What does a code chunk look like?\n\nAn empty code chunk looks like this:\n\n`Visual editor`\n\n![](../images/01_qmd_chunk_empty_visual.png)\n\n`Source editor`\n\n![](../images/01_qmd_chunk_empty_source.png)\n\n::: callout-important\nNote that a code chunks start with ```` ```{r} ```` and ends with ```` ``` ````. Make sure there is no space before ```` ``` ````.\n:::\n\n## Enter and run code (1/2)\n::: {style=\"font-size: 85%;\"}\n\n-   **Type R code** inside code chunks\n-   **Select code** you want to run, by\n    -   placing the cursor in the line of code you want to run,\n    -   ***or*** highlighting the code you want to run\n\n::: columns\n::: {.column width=\"50%\"}\n-   **Run selected code** by\n    -   clicking on the ![](../images/01_Script_Run.png) button in the top right corner of the scripting window and choosing `Run Selected Line(s)`,\n    -   or typing one of the following key combinations:\n\n|     |                      |\n|-----|----------------------|\n| Mac | **ctrl + return**    |\n| PC  | **command + return** |\n\n-   *Where does the output appear?*\n:::\n\n::: {.column width=\"50%\"}\n![](../images/01_qmd_coding1a.png){fig-align=\"center\"}\n:::\n:::\n\n:::\n\n## Enter and run code (2/2)\n\n::: {style=\"font-size: 80%;\"}\n-   **Run all code** in a chunk by\n    -   by clicking the play button in the top right corner of the chunk\n-   The code output appears below the code chunk\n:::\n\n![](../images/01_qmd_coding2.png){fig-align=\"center\"}\n\n::: callout-note\n-   The output should also appear in the Console.\n-   Settings can be changed so that the output appears only in the Console and not below the code chunk:\n    -   Select {{< fa solid gear >}} (to right of Render button) and then *Chunk Output in Console*.\n:::\n\n## Create a code chunk\n\n::: {style=\"font-size: 90%;\"}\n__3 options__ to create a code chunk\n\n1.  Click on ![](../images/code_chunk_insert_icon.png) at top right of the editor window, or\n\n2.  [**Keyboard shortcut**]{style=\"color:darkorange\"}\n\n|     |                        |\n|-----|------------------------|\n| Mac | *Command + Option + I* |\n| PC  | *Ctrl + Alt + I*       |\n\n3.  `Visual editor`: Select `Insert` -\\> `Executable Cell` -\\> `R`\n\n:::\n\n![](../images/code_chunk_insert_visual.png){fig-align=\"center\" width=70%}\n\n\n## Useful keyboard shortcuts\n\n[Full list of keyboard shortcuts](https://support.posit.co/hc/en-us/articles/200711853-Keyboard-Shortcuts){target=\"_blank\"}\n\n| action                              | mac                | windows/linux   |\n|-------------------------------------|--------------------|-----------------|\n| Run code in qmd (or script)         | cmd + enter        | ctrl + enter    |\n| `<-`                                | option + -         | alt + -         |\n| interrupt currently running command | esc                | esc             |\n| keyboard shortcut help              | option + shift + k | alt + shift + k |\n\n\n\n**Practice:** Try typing code below in your qmd (with shortcut) and evaluating it (with shortcut):\n\n\n::: {.cell}\n\n```{.r .cell-code}\ny <- 5\ny\n```\n:::\n\n\n\n# 3 types of Quarto content: YAML\n\n1. Text, lists, images, tables, links\n2. Code chunks\n3. [*YAML metadata*]{style=\"color:darkorange\"} \n\n![[Illustration by Alison Hill and Allison Horst, for RStudio.](https://allisonhorst.com/horst-hill-collaborations)](../images/horst_hedgehog_text_code.png){fig-align=\"center\"}\n\n\n## `YAML` metadata\n\nMany output options can be set in the **YAML metadata**, which is the *first set of code in the file starting and ending with* `---`.\n\n-   It sets the configuration specifications for the output file\n-   YAML is an acronym for \n    - *yet another markup language*, or \n    - *YAML ain't markup language*\n\n## Simple `YAML` example \n\n::: {style=\"font-size: 70%;\"}\n* The default YAML includes a **title** and **author** that appear at the top of the output file. In the example below, I also added in a **date** option\n:::\n\n::: columns \n::: {.column width=\"50%\"}\n\nYAML:\n\n\n::: {.cell}\n\n```{.r .cell-code}\n---\ntitle: \"My first Quarto file\"\nauthor: \"Meike\"\ndate: \"9/25/2023\"\nformat: html\neditor: visual\n---\n```\n:::\n\n\n:::\n\n::: {.column width=\"50%\"}\nOutput:\n\n![](../images/yaml_simple_output.png){fig-align=\"center\"}\n:::\n:::\n\n:::{.callout-important}\n* The YAML **must** start and end with 3 dashes `---`.\n* The first set of `---` **must** be on the very first line.\n:::\n\n\n## Change the output file type {.smaller}\n\n::: columns\n::: {.column width=\"35%\"}\n* The YAML specifies the format of the output file:\n    * html, Word, pdf, slides, website, book, etc.\n* This is done by changing the `format:` option \n\n:::\n\n::: {.column width=\"65%\"}\n![[Illustration by Alison Hill and Allison Horst, for RStudio.](https://allisonhorst.com/horst-hill-collaborations)](../images/horst_hedgehog_output_types.png){fig-align=\"center\"}\n:::\n:::\n\n::: columns\n::: {.column width=\"40%\"}\n\n\n::: {.cell}\n\n```{.r .cell-code}\n---\ntitle: \"My first Quarto file\"\nauthor: \"Meike\"\ndate: \"9/25/2023\"\nformat: html\neditor: visual\n---\n```\n:::\n\n\n:::\n\n::: {.column width=\"60%\"}\n+------------------------+----------------------------------+\n| Output format          | YAML                             |\n+========================+==================================+\n| html                   | `format: html`                   |\n+------------------------+----------------------------------+\n| Word                   | `format: docx`                   |\n+------------------------+----------------------------------+\n| pdf[^2]                | `format: pdf`                    |\n+------------------------+----------------------------------+\n| html slides            | `format: revealjs`               |\n+------------------------+----------------------------------+\n| PPT slides             | `format: pptx`                   |\n+------------------------+----------------------------------+\n\n:::\n:::\n\n[^2]:  requires LaTeX installation \n\n\n\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    // dispatch for htmlwidgets\n    function fireSlideEnter() {\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n    }\n\n    function fireSlideChanged(previousSlide, currentSlide) {\n      fireSlideEnter();\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}